
import systems from "./systems"
import a_system from "./some_system"
import another_system from "./some_other_system"
import components from "./components"
import Display from "kepler-display"

fn symbol Main() {
    let display = Display("Hello, World!", (1920, 1080))
    display -> Open
    let mut level = Level("level_1", components)

    let systems = systems + [ a_system, another_system ];

    Loop {
        Display::CommitFrame();
        level.instances
            = systems
            -> Map { it -> Execute(component_instances) }
            -> Reduce { ac + it }

        if display -> !IsOpen { break }
    }

    :ok
}

export Main
